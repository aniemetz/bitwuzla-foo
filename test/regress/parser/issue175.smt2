(set-option :produce-unsat-cores true)
(declare-fun top.res.call_35@0 () Bool)
(declare-fun top.res.2.call_32_2@0 () (_ BitVec 32))
(declare-fun top.res.2.call_32_3@0 () (_ BitVec 32))
(declare-fun top.res.2.call_32_2@1 () (_ BitVec 32))
(declare-fun top.res.2.call_32_3@1 () (_ BitVec 32))
(declare-fun top.usr.e02@2 () Bool)
(declare-fun top.usr.init_invalid@2 () (_ BitVec 32))
(declare-fun top.res.gklocal_34@2 () Bool)
(declare-fun top.res.2.call_32_3@2 () (_ BitVec 32))
(declare-fun top.res.2.call_32_3@3 () (_ BitVec 32))
(declare-fun %init@0 () Bool)
(declare-fun %init@1 () Bool)
(declare-fun %sys_def () Bool)

(assert (=> %sys_def (and (= top.res.gklocal_34@2 (bvsgt top.usr.init_invalid@2 (_ bv0 32))) (= top.res.2.call_32_3@0 (ite top.usr.e02@2 top.res.2.call_32_2@1 (_ bv0 32))) (= top.res.2.call_32_3@2 (ite top.usr.e02@2 (_ bv0 32) top.res.2.call_32_3@1)) (not %init@1))))
(assert (= %init@0 %init@1))
(assert (= (= top.res.2.call_32_2@0 #b00000000000000000000000000000000) (= top.res.2.call_32_2@1 #b00000000000000000000000000000000)))
(assert (= (= top.res.2.call_32_3@0 #b00000000000000000000000000000000) (= top.res.2.call_32_3@1 #b00000000000000000000000000000000)))
(assert (distinct top.res.2.call_32_3@2 (_ bv0 32)))
(assert top.res.call_35@0)
(push 1)
(assert (! (not (and top.res.call_35@0 (not %init@0) (not (= top.res.2.call_32_3@0 (_ bv0 32))) (not (= top.res.2.call_32_2@0 (_ bv0 32))))) :named t355))
(set-info :status sat)
(check-sat)
(pop 1)
(assert %sys_def)
(assert (not (and top.res.call_35@0 (not %init@0) (not (= top.res.2.call_32_3@0 (_ bv0 32))) (not (= top.res.2.call_32_2@0 (_ bv0 32))))))
(assert (! (not (= top.res.2.call_32_3@3 (_ bv0 32))) :named t970))
(set-info :status unsat)
(check-sat)
(get-unsat-core)
